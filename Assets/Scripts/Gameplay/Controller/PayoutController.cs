using System;
using System.Collections.Generic;
using UnityEngine;

namespace Gameplay.Controller
{
    public class PayoutController : MonoBehaviour
    {
        private CellController[,] _board = new CellController[4,5];

        private List<List<(int x, int y)>> _paylines = new List<List<(int, int)>>()
        {
            new() { (0, 0), (0, 1), (0, 2), (0, 3), (0, 4) },
            new() { (1, 0), (1, 1), (1, 2), (1, 3), (1, 4) },
            new() { (2, 0), (2, 1), (2, 2), (2, 3), (2, 4) },
            new() { (3, 0), (3, 1), (3, 2), (3, 3), (3, 4) },

            new() { (0, 0), (1, 1), (0, 2), (1, 3), (0, 4) },
            new() { (1, 0), (0, 1), (1, 2), (0, 3), (1, 4) },
            new() { (1, 0), (2, 1), (1, 2), (2, 3), (1, 4) },
            new() { (2, 0), (1, 1), (2, 2), (1, 3), (2, 4) },
            new() { (2, 0), (3, 1), (2, 2), (3, 3), (2, 4) },
            new() { (3, 0), (2, 1), (3, 2), (2, 3), (3, 4) },
            
            new() { (0, 0), (1, 1), (2, 2), (1, 3), (0, 4) },
            new() { (1, 0), (2, 1), (3, 2), (2, 3), (1, 4) },
            new() { (3, 0), (2, 1), (1, 2), (2, 3), (3, 4) },
            new() { (2, 0), (1, 1), (0, 2), (1, 3), (2, 4) },
            
            new() { (0, 0), (0, 1), (1, 2), (0, 3), (0, 4) },
            new() { (1, 0), (1, 1), (2, 2), (1, 3), (1, 4) },
            new() { (2, 0), (2, 1), (3, 2), (2, 3), (2, 4) },
            new() { (3, 0), (3, 1), (2, 2), (3, 3), (3, 4) },
            new() { (2, 0), (2, 1), (1, 2), (2, 3), (2, 4) },
            new() { (1, 0), (1, 1), (0, 2), (1, 3), (1, 4) },
            
            new() { (0, 0), (0, 1), (0, 2), (1, 3), (2, 4) },
            new() { (1, 0), (1, 1), (1, 2), (2, 3), (3, 4) },
            new() { (2, 0), (1, 1), (0, 2), (0, 3), (0, 4) },
            new() { (3, 0), (2, 1), (1, 2), (1, 3), (1, 4) },
            
            new() { (0, 0), (1, 1), (2, 2), (2, 3), (2, 4) },
            new() { (1, 0), (2, 1), (3, 2), (3, 3), (3, 4) },
            new() { (2, 0), (2, 1), (2, 2), (1, 3), (0, 4) },
            new() { (3, 0), (3, 1), (3, 2), (2, 3), (1, 4) },
            
            new() { (0, 0), (1, 1), (1, 2), (1, 3), (0, 4) },
            new() { (1, 0), (0, 1), (0, 2), (0, 3), (1, 4) },
            new() { (1, 0), (2, 1), (2, 2), (2, 3), (1, 4) },
            new() { (2, 0), (1, 1), (1, 2), (1, 3), (2, 4) },
            new() { (2, 0), (3, 1), (3, 2), (3, 3), (2, 4) },
            new() { (3, 0), (2, 1), (2, 2), (2, 3), (3, 4) },
            
            new() { (1, 0), (0, 1), (1, 2), (2, 3), (1, 4) },
            new() { (2, 0), (1, 1), (2, 2), (3, 3), (2, 4) },
            new() { (1, 0), (2, 1), (1, 2), (0, 3), (1, 4) },
            new() { (2, 0), (3, 1), (2, 2), (1, 3), (2, 4) },
            new() { (0, 0), (1, 1), (0, 2), (1, 3), (1, 4) },
            new() { (1, 0), (1, 1), (0, 2), (1, 3), (0, 4) },
        };

        public void CheckResult(List<ReelController> reels)
        {
            for (int i = 0; i < reels.Count; i++)
            {
                for (int j = 0; j < 4; j++)
                {
                    _board[j, i] = reels[i].GetCellByIndex(j + 1);
                }
            }
        }

        private void ShowResult()
        {
            for (int i = 0; i < 4; i++)
            {
                for (int j = 0; j < 5; j++)
                {
                    Debug.Log($"({i},{j}) - {_board[i, j].name}");
                }
            }
        }
    }
}
